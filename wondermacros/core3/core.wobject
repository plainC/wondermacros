#include "platform.h"

simple bool : wobject_bool
simple int : wobject_int
simple char* : wobject_cstring
simple const char* : wobject_cstring


class Object
    construct
    Object* eval(EvalContext* context)
    bool equal(Object* other)
    void print(FILE* out)
    static bool to_json(Object** self, Writer* writer)

class Writer
    bool put_char(char ch)
    bool put_cstr(const char* str)

class Symbol
    char* name
    Object* value
    override print

class Lisp
    readtable_func readtable[256]

    construct
    Object* read()
    void repl()

class Int
    int64_t value
    override print

class Cons
    Object* car
    Object* cdr
    override print

class EvalContext
    Symbol* intern(const char* name)
    intern_map_t* interned


class BinOp
    bin_op_t type
    Object* lhs
    Object* rhs
    override eval


class String
    void appendc(const char* str)

class StringRef : String
    Object* object
    ClassProperty* property

class Test
    construct
    destruct

    int a
    int b[53]
    int c[22][56]
    int d[1][2][3]
    int e[dynamic]
    int f[stack]
    int g[deque]
    int h[hash:int]
    char* i
    const char* j
    const char* k[3][2]

    Test* next[4]

    void foo()
    void goo(int x)
    void boo(int x, int y)

    static void foo_s()
    static void goo_s(int x)

    signal jump()
    signal moved(int x, int y)
