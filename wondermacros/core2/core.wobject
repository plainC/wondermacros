interface IWriter
    int put(char ch)
    int append(char* str, size_t size)

interface IReader
    bool is_eof()
    char peek()
    char getc()
    size_t read(char* buf, size_t size)


interface IJson
    int to_json(IWriter* writer)

interface ITest
    void jump(int i)
    void shout(int i)
    void fooo()


singleton class Nothing
  [_none]
    Nothing* clone()
    bool eq(Nothing* other)
    bool equal(Nothing* other)

class StdoutWriter : Nothing IWriter
    override put
    override append


class String : Nothing
    int to_string(IWriter* writer)


class String8 : String
    char* buf
    size_t size
    override to_string


class StringTemplate : String
    StringTemplate* next


class Point : Nothing ITest
    int x
    int y
    signal ping(int x)
    construct
    destruct
    override equal

class Point3D : Point
    int z
    construct
    destruct
    override shout
